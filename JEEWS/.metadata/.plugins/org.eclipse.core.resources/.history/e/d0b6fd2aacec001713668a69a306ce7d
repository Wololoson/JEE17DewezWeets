package be.gestionhopital.Models;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;

import org.xml.sax.SAXException;

import be.gestionhopital.DAO.DAOChirurgien;
import be.gestionhopital.DAO.DAODirecteur;
import be.gestionhopital.DAO.DAOSecretaire;
import be.gestionhopital.Factory.AbstractDAOFactory;

public class ListPersonnel {
	private static ListPersonnel instance = null;
	private List<Secretaire> listSecretaire = new ArrayList<>();
	private List<Chirurgien> listChirurgien = new ArrayList<>();
	private Directeur directeur;
	
	private ListPersonnel() {
		try {

			AbstractDAOFactory adf = AbstractDAOFactory.getFactory(AbstractDAOFactory.DAO_FACTORY);
			DAOSecretaire secrDAO = (DAOSecretaire) adf.getSecretaireDAO();
			DAOChirurgien chirDAO = (DAOChirurgien) adf.getChirurgienDAO();
			DAODirecteur direDAO = (DAODirecteur) adf.getDirecteurDAO();
			listSecretaire = secrDAO.findAll();
			listChirurgien = chirDAO.findAll();
			directeur = direDAO.find(id);
		} catch (ParserConfigurationException | SAXException | IOException e) {
			e.printStackTrace();
		}
	}
	
	public List<Secretaire> getListSecretaire() {
		return listSecretaire;
	}

	public void setListSecretaire(List<Secretaire> listSecretaire) {
		this.listSecretaire = listSecretaire;
	}

	public List<Chirurgien> getListChirurgien() {
		return listChirurgien;
	}

	public void setListChirurgien(List<Chirurgien> listChirurgien) {
		this.listChirurgien = listChirurgien;
	}

	public void ajouterPersonnel(Personne p) {
		if(p instanceof Secretaire) {
			listSecretaire.add((Secretaire)p);
		}
		else {
			listChirurgien.add((Chirurgien)p);
		}
	}
	
	public void supprimerPersonnel(Personne p) {
		if(p instanceof Secretaire) {
			for(Secretaire s : listSecretaire) {
				if(p.equals(s)) {
					listSecretaire.remove(s);
				}
			}
		}
		else {
			for(Chirurgien c : listChirurgien) {
				if(p.equals(c)) {
					listChirurgien.remove(c);
				}
			}
		}
	}
	
	public static synchronized ListPersonnel getInstance() {
		if(instance == null)
			instance = new ListPersonnel();
		
		return instance;
	}
}
